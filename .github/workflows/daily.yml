name: Daily Lottery Collecting

on:
  schedule:
    - cron: '0 10 * * *'   # 10h UTC = 17h
  push:
    branches:
      - main
  workflow_dispatch:       # Cho phép chạy tay

jobs:
  fetch-database:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/fetch.txt

      - name: Fetching html data
        run: python pipeline/fetch_database.py
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}

  crawl_data:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/crawl.txt

      - name: Fetching html data
        run: python pipeline/crawl_data.py

  extract-data:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    needs: crawl_data
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/extract.txt

      - name: Extracting info from html data
        run: python pipeline/extract_data.py

  transform-data:
    runs-on: ubuntu-latest
    needs:
      - fetch-database
      - extract-data
    if: |
      always() &&
      (
        needs.fetch-database.result == 'success' ||
        needs.extract-data.result == 'success'
      )
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/transform.txt

      - name: Transforming data
        run: python pipeline/transform_data.py

  load-data:
    runs-on: ubuntu-latest
    needs: transform-data
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/load.txt

      - name: Loading data
        run: python pipeline/load_data.py
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}
