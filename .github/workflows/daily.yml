name: Daily Lottery Collecting

on:
  schedule:
    - cron: '59 16 * * *' #23h59 cung ngay
  push:
    branches:
      - main
  workflow_dispatch:

# ================================
jobs:

  # ---- PUSH branch only ----
  fetch-database:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/fetch.txt

      - name: Create a location to store data files
        run: mkdir data && touch data/data.json data/transform.json

      - name: Fetching html data
        run: python pipeline/fetch_database.py
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-data
          path: data

  transform-data-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: fetch-database
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/transform.txt

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-data

      - name: Move data to workspace
        run: |
          mkdir -p data
          mv data.json transform.json data/

      - name: Transforming data
        run: python pipeline/transform_data.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-data-transform
          path: data

  load-data-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: transform-data-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/load.txt

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-data-transform

      - name: Move data to workspace
        run: |
          mkdir -p data
          mv data.json transform.json data/

      - name: Loading data
        run: python pipeline/load_data.py
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}


  # ---- SCHEDULE or MANUAL branch only ----
  crawl_data:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/crawl.txt

      - name: Create a location to store data files
        run: mkdir data && touch data/data.json data/transform.json

      - name: Fetching html data
        run: python pipeline/crawl_data.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-data
          path: data

  extract-data:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    needs: crawl_data
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/extract.txt

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-data

      - name: Move data to workspace
        run: |
          mkdir -p data
          mv data.json transform.json data/

      - name: Extracting info from html data
        run: python pipeline/extract_data.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-data-extract
          path: data

  transform-data-schedule:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    needs: extract-data
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/transform.txt

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-data-extract

      - name: Move data to workspace
        run: |
          mkdir -p data
          mv data.json transform.json data/

      - name: Transforming data
        run: python pipeline/transform_data.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-data-transform
          path: data

  load-data-schedule:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    needs: transform-data-schedule
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements/load.txt

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-data-transform

      - name: Move data to workspace
        run: |
          mkdir -p data
          mv data.json transform.json data/

      - name: Loading data
        run: python pipeline/load_data.py
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}
